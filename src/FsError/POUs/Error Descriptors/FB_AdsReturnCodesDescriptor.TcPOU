<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_AdsReturnCodesDescriptor" Id="{4b4df1c9-53db-0819-2339-74140e55f01b}" SpecialFunc="None">
    <Declaration><![CDATA[// Descriptor for ADS errors codes.
// Provides description for errors.
{attribute 'no_assign'}
{attribute 'enable_dynamic_creation'}
{attribute 'no_explicit_call' := 'direct call for this function block is not allowed'}
FUNCTION_BLOCK FINAL FB_AdsReturnCodesDescriptor IMPLEMENTS I_ErrorDescriptor
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="GetDescription" Id="{9df96f31-c152-0fd0-34c4-b604d4070050}">
      <Declaration><![CDATA[// Retrieves the descriptive message for the specified error code.
METHOD GetDescription : T_ErrorMessage // The descriptive message corresponding to the provided error code.
VAR_INPUT
	Code : T_ErrorCode; // The error code for which the description is to be retrieved.
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE Code OF
    E_AdsReturnCode.ERR_NOERROR:						GetDescription := 'No error.';
    E_AdsReturnCode.ERR_INTERNAL:						GetDescription := 'Internal error.';
    E_AdsReturnCode.ERR_NORTIME:						GetDescription := 'No real-time.';
    E_AdsReturnCode.ERR_ALLOCLOCKEDMEM:					GetDescription := 'Allocation locked – memory error.';
    E_AdsReturnCode.ERR_INSERTMAILBOX:					GetDescription := 'Mailbox full – the ADS message could not be sent. Reducing the number of ADS messages per cycle will help.';
    E_AdsReturnCode.ERR_WRONGRECEIVEHMSG:				GetDescription := 'Wrong HMSG.';
    E_AdsReturnCode.ERR_TARGETPORTNOTFOUND:				GetDescription := 'Target port not found – ADS server is not started or is not reachable.';
    E_AdsReturnCode.ERR_TARGETMACHINENOTFOUND:			GetDescription := 'Target computer not found – AMS route was not found.';
    E_AdsReturnCode.ERR_UNKNOWNCMDID:					GetDescription := 'Unknown command ID.';
    E_AdsReturnCode.ERR_BADTASKID:						GetDescription := 'Invalid task ID.';
    E_AdsReturnCode.ERR_NOIO:							GetDescription := 'No IO.';
    E_AdsReturnCode.ERR_UNKNOWNAMSCMD:					GetDescription := 'Unknown AMS command.';
    E_AdsReturnCode.ERR_WIN32ERROR:						GetDescription := 'Win32 error.';
    E_AdsReturnCode.ERR_PORTNOTCONNECTED:				GetDescription := 'Port not connected.';
    E_AdsReturnCode.ERR_INVALIDAMSLENGTH:				GetDescription := 'Invalid AMS length.';
    E_AdsReturnCode.ERR_INVALIDAMSNETID:				GetDescription := 'Invalid AMS Net ID.';
    E_AdsReturnCode.ERR_LOWINSTLEVEL:					GetDescription := 'Installation level is too low –TwinCAT 2 license error.';
    E_AdsReturnCode.ERR_NODEBUGINTAVAILABLE:			GetDescription := 'No debugging available.';
    E_AdsReturnCode.ERR_PORTDISABLED:					GetDescription := 'Port disabled – TwinCAT system service not started.';
    E_AdsReturnCode.ERR_PORTALREADYCONNECTED:			GetDescription := 'Port already connected.';
    E_AdsReturnCode.ERR_AMSSYNC_W32ERROR:				GetDescription := 'AMS Sync Win32 error.';
    E_AdsReturnCode.ERR_AMSSYNC_TIMEOUT: 				GetDescription := 'AMS Sync Timeout.';
    E_AdsReturnCode.ERR_AMSSYNC_AMSERROR: 				GetDescription := 'AMS Sync error.';
    E_AdsReturnCode.ERR_AMSSYNC_NOINDEXINMAP: 			GetDescription := 'No index map for AMS Sync available.';
    E_AdsReturnCode.ERR_INVALIDAMSPORT: 				GetDescription := 'Invalid AMS port.';
    E_AdsReturnCode.ERR_NOMEMORY: 						GetDescription := 'No memory.';
    E_AdsReturnCode.ERR_TCPSEND:						GetDescription := 'TCP send error.';
    E_AdsReturnCode.ERR_HOSTUNREACHABLE:				GetDescription := 'Host unreachable.';
    E_AdsReturnCode.ERR_INVALIDAMSFRAGMENT:				GetDescription := 'Invalid AMS fragment.';
    E_AdsReturnCode.ERR_TLSSEND:						GetDescription := 'TLS send error – secure ADS connection failed.';
    E_AdsReturnCode.ERR_ACCESSDENIED:					GetDescription := 'Access denied – secure ADS access denied.';
    E_AdsReturnCode.ROUTERERR_NOLOCKEDMEMORY:			GetDescription := 'Locked memory cannot be allocated.';
    E_AdsReturnCode.ROUTERERR_RESIZEMEMORY:				GetDescription := 'The router memory size could not be changed.';
    E_AdsReturnCode.ROUTERERR_MAILBOXFULL:				GetDescription := 'The mailbox has reached the maximum number of possible messages.';
    E_AdsReturnCode.ROUTERERR_DEBUGBOXFULL:				GetDescription := 'The Debug mailbox has reached the maximum number of possible messages.';
    E_AdsReturnCode.ROUTERERR_UNKNOWNPORTTYPE: 			GetDescription := 'The port type is unknown.';
    E_AdsReturnCode.ROUTERERR_NOTINITIALIZED: 			GetDescription := 'The router is not initialized.';
    E_AdsReturnCode.ROUTERERR_PORTALREADYINUSE: 		GetDescription := 'The port number is already assigned.';
    E_AdsReturnCode.ROUTERERR_NOTREGISTERED: 			GetDescription := 'The port is not registered.';
    E_AdsReturnCode.ROUTERERR_NOMOREQUEUES:				GetDescription := 'The maximum number of ports has been reached.';
    E_AdsReturnCode.ROUTERERR_INVALIDPORT:				GetDescription := 'The port is invalid.';
    E_AdsReturnCode.ROUTERERR_NOTACTIVATED:				GetDescription := 'The router is not active.';
    E_AdsReturnCode.ROUTERERR_FRAGMENTBOXFULL:			GetDescription := 'The mailbox has reached the maximum number for fragmented messages.';
    E_AdsReturnCode.ROUTERERR_FRAGMENTTIMEOUT:			GetDescription := 'A fragment timeout has occurred.';
    E_AdsReturnCode.ROUTERERR_TOBEREMOVED:				GetDescription := 'The port is removed.';
    E_AdsReturnCode.ADSERR_DEVICE_ERROR:				GetDescription := 'General device error.';
    E_AdsReturnCode.ADSERR_DEVICE_SRVNOTSUPP:			GetDescription := 'Service is not supported by the server.';
    E_AdsReturnCode.ADSERR_DEVICE_INVALIDGRP:			GetDescription := 'Invalid index group.';
    E_AdsReturnCode.ADSERR_DEVICE_INVALIDOFFSET:		GetDescription := 'Invalid index offset.';
    E_AdsReturnCode.ADSERR_DEVICE_INVALIDACCESS:		GetDescription := 'Reading or writing not permitted.';
    E_AdsReturnCode.ADSERR_DEVICE_INVALIDSIZE:			GetDescription := 'Parameter size not correct.';
    E_AdsReturnCode.ADSERR_DEVICE_INVALIDDATA:			GetDescription := 'Invalid data values.';
    E_AdsReturnCode.ADSERR_DEVICE_NOTREADY:				GetDescription := 'Device is not ready to operate.';
    E_AdsReturnCode.ADSERR_DEVICE_BUSY:					GetDescription := 'Device is busy.';
    E_AdsReturnCode.ADSERR_DEVICE_INVALIDCONTEXT:		GetDescription := 'Invalid operating system context. This can result from use of ADS function blocks in different tasks. It may be possible to resolve this through Multi-task data access synchronization in the PLC.';
    E_AdsReturnCode.ADSERR_DEVICE_NOMEMORY:				GetDescription := 'Insufficient memory.';
    E_AdsReturnCode.ADSERR_DEVICE_INVALIDPARM:			GetDescription := 'Invalid parameter values.';
    E_AdsReturnCode.ADSERR_DEVICE_NOTFOUND:				GetDescription := 'Not found (files, ...).';
    E_AdsReturnCode.ADSERR_DEVICE_SYNTAX:				GetDescription := 'Syntax error in file or command.';
    E_AdsReturnCode.ADSERR_DEVICE_INCOMPATIBLE:			GetDescription := 'Objects do not match.';
    E_AdsReturnCode.ADSERR_DEVICE_EXISTS:				GetDescription := 'Object already exists.';
    E_AdsReturnCode.ADSERR_DEVICE_SYMBOLNOTFOUND:		GetDescription := 'Symbol not found.';
    E_AdsReturnCode.ADSERR_DEVICE_SYMBOLVERSIONINVALID:	GetDescription := 'Invalid symbol version. This can occur due to an online change. Create a new handle.';
    E_AdsReturnCode.ADSERR_DEVICE_INVALIDSTATE:			GetDescription := 'Device (server) is in invalid state.';
    E_AdsReturnCode.ADSERR_DEVICE_TRANSMODENOTSUPP:		GetDescription := 'AdsTransMode not supported.';
    E_AdsReturnCode.ADSERR_DEVICE_NOTIFYHNDINVALID:		GetDescription := 'Notification handle is invalid.';
    E_AdsReturnCode.ADSERR_DEVICE_CLIENTUNKNOWN:		GetDescription := 'Notification client not registered.';
    E_AdsReturnCode.ADSERR_DEVICE_NOMOREHDLS:			GetDescription := 'No further handle available.';
    E_AdsReturnCode.ADSERR_DEVICE_INVALIDWATCHSIZE:		GetDescription := 'Notification size too large.';
    E_AdsReturnCode.ADSERR_DEVICE_NOTINIT:				GetDescription := 'Device not initialized.';
    E_AdsReturnCode.ADSERR_DEVICE_TIMEOUT:				GetDescription := 'Device has a timeout.';
    E_AdsReturnCode.ADSERR_DEVICE_NOINTERFACE:			GetDescription := 'Interface query failed.';
    E_AdsReturnCode.ADSERR_DEVICE_INVALIDINTERFACE:		GetDescription := 'Wrong interface requested.';
    E_AdsReturnCode.ADSERR_DEVICE_INVALIDCLSID:			GetDescription := 'Class ID is invalid.';
    E_AdsReturnCode.ADSERR_DEVICE_INVALIDOBJID:			GetDescription := 'Object ID is invalid.';
    E_AdsReturnCode.ADSERR_DEVICE_PENDING:				GetDescription := 'Request pending.';
    E_AdsReturnCode.ADSERR_DEVICE_ABORTED:				GetDescription := 'Request is aborted.';
    E_AdsReturnCode.ADSERR_DEVICE_WARNING:				GetDescription := 'Signal warning.';
    E_AdsReturnCode.ADSERR_DEVICE_INVALIDARRAYIDX:		GetDescription := 'Invalid array index.';
    E_AdsReturnCode.ADSERR_DEVICE_SYMBOLNOTACTIVE:		GetDescription := 'Symbol not active.';
    E_AdsReturnCode.ADSERR_DEVICE_ACCESSDENIED:			GetDescription := 'Access denied.';
    E_AdsReturnCode.ADSERR_DEVICE_LICENSENOTFOUND:		GetDescription := 'Missing license.';
    E_AdsReturnCode.ADSERR_DEVICE_LICENSEEXPIRED:		GetDescription := 'License expired.';
    E_AdsReturnCode.ADSERR_DEVICE_LICENSEEXCEEDED:		GetDescription := 'License exceeded.';
    E_AdsReturnCode.ADSERR_DEVICE_LICENSEINVALID:		GetDescription := 'Invalid license.';
    E_AdsReturnCode.ADSERR_DEVICE_LICENSESYSTEMID:		GetDescription := 'License problem: System ID is invalid.';
    E_AdsReturnCode.ADSERR_DEVICE_LICENSENOTIMELIMIT:	GetDescription := 'License not limited in time.';
    E_AdsReturnCode.ADSERR_DEVICE_LICENSEFUTUREISSUE:	GetDescription := 'License problem: Time in the future.';
    E_AdsReturnCode.ADSERR_DEVICE_LICENSETIMETOLONG:	GetDescription := 'License period too long.';
    E_AdsReturnCode.ADSERR_DEVICE_EXCEPTION:			GetDescription := 'Exception at system startup.';
    E_AdsReturnCode.ADSERR_DEVICE_LICENSEDUPLICATED:	GetDescription := 'License file read twice.';
    E_AdsReturnCode.ADSERR_DEVICE_SIGNATUREINVALID:		GetDescription := 'Invalid signature.';
    E_AdsReturnCode.ADSERR_DEVICE_CERTIFICATEINVALID:	GetDescription := 'Invalid certificate.';
    E_AdsReturnCode.ADSERR_DEVICE_LICENSEOEMNOTFOUND:	GetDescription := 'Public key not known from OEM.';
    E_AdsReturnCode.ADSERR_DEVICE_LICENSERESTRICTED:	GetDescription := 'License not valid for this system ID.';
    E_AdsReturnCode.ADSERR_DEVICE_LICENSEDEMODENIED:	GetDescription := 'Demo license prohibited.';
    E_AdsReturnCode.ADSERR_DEVICE_INVALIDFNCID:			GetDescription := 'Invalid function ID.';
    E_AdsReturnCode.ADSERR_DEVICE_OUTOFRANGE:			GetDescription := 'Outside the valid range.';
    E_AdsReturnCode.ADSERR_DEVICE_INVALIDALIGNMENT:		GetDescription := 'Invalid alignment.';
    E_AdsReturnCode.ADSERR_DEVICE_LICENSEPLATFORM:		GetDescription := 'Invalid platform level.';
    E_AdsReturnCode.ADSERR_DEVICE_FORWARD_PL:			GetDescription := 'Context – forward to passive level.';
    E_AdsReturnCode.ADSERR_DEVICE_FORWARD_DL:			GetDescription := 'Context – forward to dispatch level.';
    E_AdsReturnCode.ADSERR_DEVICE_FORWARD_RT:			GetDescription := 'Context – forward to real-time.';
    E_AdsReturnCode.ADSERR_CLIENT_ERROR:				GetDescription := 'Client error.';
    E_AdsReturnCode.ADSERR_CLIENT_INVALIDPARM:			GetDescription := 'Service contains an invalid parameter.';
    E_AdsReturnCode.ADSERR_CLIENT_LISTEMPTY:			GetDescription := 'Polling list is empty.';
    E_AdsReturnCode.ADSERR_CLIENT_VARUSED:				GetDescription := 'Var connection already in use.';
    E_AdsReturnCode.ADSERR_CLIENT_DUPLINVOKEID:			GetDescription := 'The called ID is already in use.';
    E_AdsReturnCode.ADSERR_CLIENT_SYNCTIMEOUT:			GetDescription := 'Timeout has occurred – the remote terminal is not responding in the specified ADS timeout. The route setting of the remote terminal may be configured incorrectly.';
    E_AdsReturnCode.ADSERR_CLIENT_W32ERROR:				GetDescription := 'Error in Win32 subsystem.';
    E_AdsReturnCode.ADSERR_CLIENT_TIMEOUTINVALID:		GetDescription := 'Invalid client timeout value.';
    E_AdsReturnCode.ADSERR_CLIENT_PORTNOTOPEN:			GetDescription := 'Port not open.';
    E_AdsReturnCode.ADSERR_CLIENT_NOAMSADDR:			GetDescription := 'No AMS address.';
    E_AdsReturnCode.ADSERR_CLIENT_SYNCINTERNAL:			GetDescription := 'Internal error in Ads sync.';
    E_AdsReturnCode.ADSERR_CLIENT_ADDHASH:				GetDescription := 'Hash table overflow.';
    E_AdsReturnCode.ADSERR_CLIENT_REMOVEHASH:			GetDescription := 'Key not found in the table.';
    E_AdsReturnCode.ADSERR_CLIENT_NOMORESYM:			GetDescription := 'No symbols in the cache.';
    E_AdsReturnCode.ADSERR_CLIENT_SYNCRESINVALID:		GetDescription := 'Invalid response received.';
    E_AdsReturnCode.ADSERR_CLIENT_SYNCPORTLOCKED:		GetDescription := 'Sync Port is locked.';
    E_AdsReturnCode.RTERR_INTERNAL:						GetDescription := 'Internal error in the real-time system.';
    E_AdsReturnCode.RTERR_BADTIMERPERIODS:				GetDescription := 'Timer value is not valid.';
    E_AdsReturnCode.RTERR_INVALIDTASKPTR:				GetDescription := 'Task pointer has the invalid value 0 (zero).';
    E_AdsReturnCode.RTERR_INVALIDSTACKPTR:				GetDescription := 'Stack pointer has the invalid value 0 (zero).';
    E_AdsReturnCode.RTERR_PRIOEXISTS:					GetDescription := 'The request task priority is already assigned.';
    E_AdsReturnCode.RTERR_NOMORETCB:					GetDescription := 'No free TCB (Task Control Block) available. The maximum number of TCBs is 64.';
    E_AdsReturnCode.RTERR_NOMORESEMAS:					GetDescription := 'No free semaphores available. The maximum number of semaphores is 64.';
    E_AdsReturnCode.RTERR_NOMOREQUEUES:					GetDescription := 'No free space available in the queue. The maximum number of positions in the queue is 64.';
    E_AdsReturnCode.RTERR_EXTIRQALREADYDEF:				GetDescription := 'An external synchronization interrupt is already applied.';
    E_AdsReturnCode.RTERR_EXTIRQNOTDEF:					GetDescription := 'No external sync interrupt applied.';
    E_AdsReturnCode.RTERR_EXTIRQINSTALLFAILED:			GetDescription := 'Application of the external synchronization interrupt has failed.';
    E_AdsReturnCode.RTERR_IRQLNOTLESSOREQUAL:			GetDescription := 'Call of a service function in the wrong context';
    E_AdsReturnCode.RTERR_VMXNOTSUPPORTED:				GetDescription := 'Intel VT-x extension is not supported.';
    E_AdsReturnCode.RTERR_VMXDISABLED:					GetDescription := 'Intel VT-x extension is not enabled in the BIOS.';
    E_AdsReturnCode.RTERR_VMXCONTROLSMISSING:			GetDescription := 'Missing function in Intel VT-x extension.';
    E_AdsReturnCode.RTERR_VMXENABLEFAILS:				GetDescription := 'Activation of Intel VT-x fails.';
    E_AdsReturnCode.WSAETIMEDOUT: 						GetDescription := 'A connection timeout has occurred while establishing the connection. Either the remote terminal did not respond properly after a certain period of time, or the established connection could not be maintained because the connected host did not respond.';
    E_AdsReturnCode.WSAECONNREFUSED: 					GetDescription := 'Connection refused. Connection couldnt be established because the target computer has rejected it. Error can result from an attempt to connect to a service that is inactive on the external host, i.e. a service for which no server application is running.';
    E_AdsReturnCode.WSAEHOSTUNREACH: 					GetDescription := 'No route to host - a socket operation referred to an unavailable host.';
ELSE
    GetDescription := Tc2_Standard.CONCAT('Unknown ADS error code: ', Tc2_Standard.CONCAT(TO_STRING(Code), '.'));
	END_CASE]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>